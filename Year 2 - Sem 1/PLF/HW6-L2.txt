;L2- ex 12 :Determine the list of nodes accesed in preorder in a tree of type (2).
; type(2) - (node (list-subtree-1) (list-subtree-2) ...) 


;traverse_preorder(l1l2l3)={ [], if l is null
;					l1+traverse(l2)+traverse(l3),otherwise}


(defun traverse_preorder(l)
    (cond 
        ((null l) nil )
        (T (append (list (car l)) (traverse_preorder (car (cdr l))) (traverse_preorder (car (cdr (cdr l)))))           
        )
    )
)

(princ "Preorder:")
(write (traverse_preorder '(A (2) (3 (B) (4))) ))